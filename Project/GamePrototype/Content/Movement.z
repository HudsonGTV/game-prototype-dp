class Movement : ZilchComponent
{
    
    [Property]
    var MovementSpeed : Real = 10.0;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        
        this.Owner.RigidBody.Velocity = Real3(0,0,0);
        
        var r3Speed = Real3(0,0,0);
        var velocity = this.Owner.RigidBody.Velocity;
        
        
        r3Speed = Real3(this.MovementSpeed * event.Dt, this.MovementSpeed * event.Dt, this.MovementSpeed * event.Dt);
        
        
        if(Zero.Keyboard.KeyIsDown(Keys.A) && Zero.Keyboard.KeyIsDown(Keys.S))
        {
            this.Owner.RigidBody.Velocity = Real3(-0.8,-0.8,0) * r3Speed;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.D) && Zero.Keyboard.KeyIsDown(Keys.S))
        {
            this.Owner.RigidBody.Velocity = Real3(0.8,-0.8,0) * r3Speed;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.A) && Zero.Keyboard.KeyIsDown(Keys.W))
        {
            this.Owner.RigidBody.Velocity = Real3(-0.8,0.8,0) * r3Speed;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.D) && Zero.Keyboard.KeyIsDown(Keys.W))
        {
            this.Owner.RigidBody.Velocity = Real3(0.8,0.8,0) * r3Speed;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.W))
        {
            this.Owner.RigidBody.Velocity = Real3(0,1,0) * r3Speed;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.A))
        {
            this.Owner.RigidBody.Velocity = Real3(-1,0,0) * r3Speed;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.S))
        {
            this.Owner.RigidBody.Velocity = Real3(0,-1,0) * r3Speed;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.D))
        {
            this.Owner.RigidBody.Velocity = Real3(1,0,0) * r3Speed;
        }
        else
        {
            this.Owner.RigidBody.Velocity = Real3(0,0,0);
        }
        
    }
    
}
